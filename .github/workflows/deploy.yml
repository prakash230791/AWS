# .github/workflows/deploy.yml

name: 'Deploy S3 Bucket with Terraform'

# Run on pushes to the main branch
on:
  push:
    branches:
      - main

# Permissions needed for AWS OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::979858933388:role/GitHubActionsTerraformRole # <-- TODO: Replace with your Account ID and Role Name
          aws-region: us-east-1 # Or your preferred region

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan

      # In a real-world scenario, you would add a manual approval step here
      # before running the apply command.

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve tfplan

      - name: Get Private Key Output
        id: get_key
        run: echo "private_key=$(terraform output -raw private_key_pem)" >> $GITHUB_OUTPUT

      - name: Store EC2 Username in Secrets Manager
        run: |
          aws secretsmanager create-secret --name ec2-default-username --secret-string '{"username":"ec2-user"}' --region us-east-1 || \
          aws secretsmanager put-secret-value --secret-id ec2-default-username --secret-string '{"username":"ec2-user"}' --region us-east-1

      - name: Store EC2 Private Key in Secrets Manager
        env:
          PRIVATE_KEY: ${{ steps.get_key.outputs.private_key }}
        run: |
          aws secretsmanager create-secret --name ec2-private-key --secret-string "$PRIVATE_KEY" --region us-east-1 || \
          aws secretsmanager put-secret-value --secret-id ec2-private-key --secret-string "$PRIVATE_KEY" --region us-east-1
